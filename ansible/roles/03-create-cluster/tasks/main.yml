---
- name: Check if cluster already exists.
  azure.azcollection.azure_rm_openshiftmanagedcluster_info:
    resource_group: "{{ cluster.cluster_resource_group }}"
    name: "{{ cluster.name }}"
  register: _aro_check
  failed_when: False
  changed_when: False

- fail:
    msg: |
      A cluster with the name {{ cluster.name }} already exists. Skipping...
  when: (_aro_check.clusters != {}) and (_aro_check.clusters.properties.provisioningState == "Succeeded")

- fail:
    msg: |
      Cluster {{ cluster.name }} failed to provision.
      Cluster Status:
      {{ _aro_check }}
  when: (_aro_check.clusters != {}) and (_aro_check.clusters.properties.provisioningState == "Failed")

- name: Create Cluster Resource Group
  azure.azcollection.azure_rm_resourcegroup:
    name: "{{ cluster.cluster_resource_group }}"
    location: "{{cluster.location }}"
    state: present
    tags: "{{ tags }}"

# - name: Generate random string with length 6
#   set_fact: 
#     randString: "{{ lookup('community.general.random_string', length=6, upper=false, numbers=false, special=false) }}"

- name: Create Cluster Profile Resource Group
  azure.azcollection.azure_rm_resourcegroup:
    name: "{{ cluster.name }}-rg"
    location: "{{cluster.location }}"
    state: present
    tags: "{{ tags }}"
  register: cluster_rg

- name: Convert pull secret to String
  set_fact: 
    pullSecretString: "{{ pullSecret | to_json }}"

- name: Cluster Resource Group ID
  set_fact: 
    cluster_rg_id: "{{ cluster_rg['state']['id'] }}"

- block:
    - name: Cluster Creation Message
      debug:
        msg: |
          ***************************************
          Preparing to create {{ cluster.name }}.
          This task may take up to an hour.
          ***************************************
      # verbosity: 0

    - name: Create OpenShift cluster
      azure.azcollection.azure_rm_openshiftmanagedcluster:
        resource_group: "{{ cluster.cluster_resource_group }}"
        name: "{{ cluster.name }}"
        location: "{{ cluster.location }}"
        tags: "{{ tags }}"
        subscription_id: "{{ subscriptionId }}"
        tenant: "{{ tenantId }}"
        cluster_profile:
          cluster_resource_group_id: "{{ cluster_rg_id }}"
          # domain: "{{ cluster.domain }}"
          version: "{{ cluster.version }}"
          pull_secret: "{{ pullSecretString }}"
        ingress_profiles:
          - visibility: "{{ cluster.ingress_visibility }}"
        api_server_profile:
          visibility: "{{ cluster.api_visibility }}"
        service_principal_profile:
          client_id: "{{ clientId }}"
          client_secret: "{{ clientSecret }}"
        network_profile:
          pod_cidr: "{{ cluster.pod_cidr }}"
          service_cidr: "{{ cluster.service_cidr }}"
        worker_profiles:
          - vm_size: "{{ cluster.worker_instance }}"
            name: worker
            subnet_id: "{{ workerSubnetId }}" 
            disk_size: "{{ cluster.worker_disk }}"
            count: "{{ cluster.worker_node_count }}"
        master_profile:
          vm_size: "{{ cluster.control_instance }}"
          subnet_id: "{{ controlSubnetId }}"
  when:
    - _aro_check.clusters == {}

